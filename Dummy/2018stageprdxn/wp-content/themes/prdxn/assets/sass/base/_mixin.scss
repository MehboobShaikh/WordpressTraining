@mixin vendor-prefixes($property, $value) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}

@mixin button(){
	padding: 11px 14px 11px 27px;
	border-radius: 30px;
	border: none;
	position: relative;
	background-color: #00a1f1;
	color: #fff;
	font-family: $bold-font;
	font-size: 19px;
	text-decoration: none;
	text-transform: capitalize;
	outline: none;
	@include vendor-prefixes(transition-property , background);
	@include vendor-prefixes(transition-duration, .5s );

	&:before {
		border-radius: 30px;
		border: 1px solid #00a1f1;
		position: absolute;
		content: "";
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

	&:after {
		width: 27px;
		height: 19px;
		margin: 0 0 0 12px;
		display: inline-block;
		vertical-align: -7px;
		background: url(assets/images/arrow.png) no-repeat;
		content: "";
	}

	@include min-responsive(1024) {
		&:hover{
			background: transparent;
			color: #000;
			@include vendor-prefixes(transition , opacity .8s);
			&:after{
				background: url(assets/images/arrow_black.png) no-repeat;
				content: "";
			}
			&:before {
				@include animation(button-animate 0.6s linear);
				@include keyframes("button-animate") {
					0% {  }
					40% { transform: scale(1.2); border: 1px solid transparent; }
					60% { border: 1px solid transparent; opacity: 0; }
					100% { border: 1px solid transparent; opacity: 0; }
				}
			}
		}
	}
}

@mixin overlay {
	content: "";
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	background-color: rgba(0, 0, 0, 0.5);
}

@mixin hover-out {
	@include vendor-prefixes(transform , scale(3,1.5));
	@include vendor-prefixes(transition, 5s ease-out);
}

@mixin people-hover {
	@include vendor-prefixes(transform , scale(1.1));
	@include vendor-prefixes(transition, 5s ease-out);
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($animation) {
	-webkit-animation: $animation;
	-moz-animation:$animation;
	-ms-animation:$animation;
	animation:$animation;
}

@mixin white-button() {
	padding: 8px 7px 5px 20px;
	border-radius: 30px;
	border: 0;
	position: relative;
	background: transparent;
	color: #fff;
	font-family: 'Open Sans', sans-serif;
	font-size: 16px;
	text-decoration: none;
	text-transform: capitalize;
	@include vendor-prefixes(transition-property , background);
	@include vendor-prefixes(transition-duration, .5s );

	&:before {
		border-radius: 30px;
		border: 1px solid #fff;
		position: absolute;
		content: "";
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

	&:after {
		width: 27px;
		height: 19px;
		margin: 0 0 0 12px;
		display: inline-block;
		vertical-align: -9px;
		background: url(assets/images/arrow.png) no-repeat;
		content: "";
	}

	&:hover{
		background: #fff;
		color: #000;
		@include vendor-prefixes(transition , opacity .8s);
		&:after{
			background: url(assets/images/arrow_black.png) no-repeat;
			content: "";
		}
		&:before {
			@include animation(button-animate 0.6s linear);
			@include keyframes("button-animate") {
				0% {  }
				40% { transform: scale(1.2); }
				60% { border: 1px solid transparent; opacity: 0; }
				100%{ border: 1px solid transparent; opacity: 0; }

			}
		}
	}
}

/********* Mozilla Firefox *********/
@mixin moz-hack {
	@-moz-document url-prefix() {
	  @content;
	}
}

// Responsive mixin
@mixin responsive($width) {
	@media screen and (max-width: $width + "px"){ @content; }
}

@mixin min-responsiveheight($height) {
		@media screen and (min-height: $height+"px") { @content; }
}

@mixin min-responsive($width) {
	@media screen and (min-width: $width + "px"){ @content; }
}

@mixin fonts($weight, $size, $family ){
	font: $weight $size $family;
}

@mixin orientation-responsive($orient,$width) {
	@media screen and (orientation: $orient) and (max-width: $width + "px") { @content; }
}

@mixin deviceWidth($width) {
	@media screen and (min-device-width: $width + "px") { @content; }
}